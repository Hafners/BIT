@page "/rechnungsadresse-overview"
@using BIT.Data
@using BIT.Services
@inject RechnungsadressService _Rechserv 

<h3>Rechnungsadressen Overview</h3>

<div class="container">
    <div class="row">
        <button type="button" class="btn btn-dark" @onclick="@(async () => await CreateRechnungsadresse())">Kunde hinzufügen</button>
    </div>
    <div class="row">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Strasse</th>
                    <th scope="col">Hausnummer</th>
                    <th scope="col">Land</th>
                    <th scope="col">Ort</th>
                    <th scope="col">PLZ</th>
                    <th scope="col">Name</th>
                    <th scope="col">Vorname</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Rechnungsadresse adresse in _Rechserv.Adressen)
                {
                    <tr>
                        <td>@adresse.Id</td>
                        <td>@adresse.Strasse</td>
                        <td>@adresse.hausNummer</td>
                        <td>@adresse.Land</td>
                        <td>@adresse.Ort</td>
                        <td>@adresse.PLZ</td>
                        <td>@adresse.Name</td>
                        <td>@adresse.Vorname</td>
                        <td> <button type="button" class="btn btn-dark" @onclick="@(async () => await EditRechnungsadresse(adresse.Id))">Bearbeiten</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    private async Task CreateRechnungsadresse(){
        var modalReference = Modal.Show<RechnungsadressEditor>("Rechnungsadresse Anlegen");
        var result = await modalReference.Result;

        if (!result.Cancelled)
        {
            _Rechserv.AddRechnungsadresse((Rechnungsadresse)result.Data!);
            StateHasChanged();
        }
    }

    private async Task EditRechnungsadresse(int rechnungadressid){
        var parameters = new ModalParameters();
        parameters.Add(nameof(RechnungsadressEditor.Rechnungsaddid), rechnungadressid);

        var modalReference = Modal.Show<RechnungsadressEditor>("Rechnungsadresse Anlegen", parameters);
        var result = await modalReference.Result;

        if (!result.Cancelled)
        {
            _Rechserv.UpdateRechnungsadresse((Rechnungsadresse)result.Data!);
            StateHasChanged();
        }
    }
}