@page "/contact-person-overview"
@using BIT.Data
@using BIT.Services
@inject ContactPersonService _ContactPersonService 

<h3>ContactPersonOverview</h3>

<div class="container">
    <div class="row">
        <button type="button" class="btn btn-dark" @onclick="@(async () => await CreateContactPerson())">Kunde hinzufügen</button>
    </div>
    <div class="row">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Country</th>
                    <th scope="col">FirstName</th>
                    <th scope="col">LastName</th>
                    <th scope="col">Ort</th>
                    <th scope="col">Postleitzahl</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (ContactPersonItem ContactPerson in _ContactPersonService.ContactPersons)
                {
                    <tr>
                        <td>@ContactPerson.Country</td>
                        <td>@ContactPerson.FirstName</td>
                        <td>@ContactPerson.LastName</td>
                        <td>@ContactPerson.City</td>
                        <td>@ContactPerson.Zipcode</td>
                        <td> <button type="button" class="btn btn-dark" @onclick="@(async () => await EditContactPerson(ContactPerson.Id))">Bearbeiten</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {
    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    private async Task CreateContactPerson(){
        var modalReference = Modal.Show<ContactPersonEditor>("Kundenanlage");
        var result = await modalReference.Result;

        if (!result.Cancelled)
        {
            _ContactPersonService.AddContactPerson((ContactPersonItem)result.Data!);
            StateHasChanged();
        }
    }

    private async Task EditContactPerson(int ContactPersonId){
        var parameters = new ModalParameters();
        parameters.Add(nameof(ContactPersonEditor.ContactPersonId), ContactPersonId);

        var modalReference = Modal.Show<ContactPersonEditor>("Kundenanlage", parameters);
        var result = await modalReference.Result;

        if (!result.Cancelled)
        {
            _ContactPersonService.UpdateContactPerson((ContactPersonItem)result.Data!);
            StateHasChanged();
        }
    }
}